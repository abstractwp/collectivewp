
name: Deploy to Dev

on:
  push:
    branches:
      - dev

env:
  php_version: '7.4'
  pantheon_env: 'dev'
  pantheon_repo: 'ssh://codeserver.dev.ecd6cef3-593a-4e19-857e-6aeca354e3f6@codeserver.dev.ecd6cef3-593a-4e19-857e-6aeca354e3f6.drush.in:2222/~/repository.git'
  pantheon_site_name: ${{ secrets.PANTHEON_SITE_NAME }}

jobs:

  deploy:
    name: Deploy to Pantheon Dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        env:
          COMPOSER_TOKEN: ${{ secrets.GH_BOT_TOKEN }}
        with:
          php-version: ${{ env.php_version }}

      # - name: Validate composer.json and composer.lock
      #   run: composer validate --strict

      - name: Get Composer cache directory
        id: composer-cache-dir
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Avoid GitHub rate limit for Composer
        run: composer config -g github-oauth.github.com ${{ secrets.GH_BOT_TOKEN }}

      - name: Place SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          config: ${{ secrets.SSH_CONFIG }}
          key: ${{ secrets.PANTHEON_SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Install Terminus
        # We use cgr to avoid dependency conflicts
        run: |
          composer global require consolidation/cgr:^2.0.5
          cgr pantheon-systems/terminus:^2.6.1
          terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}

      - name: Composer Install Dependencies
        run: composer install --working-dir=dev-tools/pro --optimize-autoloader --no-dev --prefer-dist --no-progress --no-suggest

      - name: Move plugins
        run: mv -f dev-tools/pro/wp-content/plugins/* wp-content/plugins/

      - name: Move theme
        run: mv -f dev-tools/pro/wp-content/themes/* wp-content/themes/

      # Build Theme
      - run: cd wp-content/themes/collectivewp && npm install

      - name: Remove node_modules
        run: cd wp-content/themes/collectivewp && rm -rf node_modules

      - name: Prepare code for deployment
        run: |
          rm -rf .github
          rm -rf dev-tools

      #      - name: Clone database and files from Live
      #        run: terminus env:clone-content -y $pantheon_site_name.live $pantheon_env

      # - name: Clone database and files from Test
      #   run: terminus env:clone-content -y $pantheon_site_name.test $pantheon_env

      - name: Push code to Pantheon Dev
        run: |
          commit_message=$(git log -1 --pretty=%B)
          git config user.name "$(git --no-pager log --format=format:'%an' -n 1)"
          git config user.email "$(git --no-pager log --format=format:'%ae' -n 1)"
          terminus env:commit $pantheon_site_name.dev --message="CI Deployment for: $commit_message"
      # There is no easy way to know when the code has actually synced to the Pantheon environment so we can't reliably
      # run Drush commands immediately after pushing code. Thus, we run database updates, import config, and disable
      # maintenance mode using Pantheon's Quicksilver scripting (see web/private/quicksilver/sync_code.php referenced by
      # pantheon.yml).
